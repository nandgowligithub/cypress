{
  "stats": {
    "suites": 3,
    "tests": 11,
    "passes": 11,
    "pending": 0,
    "failures": 0,
    "start": "2022-06-07T14:30:48.065Z",
    "end": "2022-06-07T14:32:13.126Z",
    "duration": 74317,
    "testsRegistered": 11,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "8be26084-6efb-47d0-9e69-77a65925deb6",
      "title": "",
      "fullFile": "cypress\\e2e\\2-new-record-test\\new-record-spec.cy.ts",
      "file": "cypress\\e2e\\2-new-record-test\\new-record-spec.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "7d5172ec-9485-40b3-8048-1799c288c52d",
          "title": "Application records",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Save button should be disabled without entering mandatory fields",
              "fullTitle": "Application records Save button should be disabled without entering mandatory fields",
              "timedOut": null,
              "duration": 14431,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// click on new record\nHomePage_1.HomePage.createNewRecordBtn().click({ force: true });\n// validate personal information heading is displayed\nHomePage_1.HomePage.validatePersonalInfoHeader(`Employee Personal Information`);\n// save button should not be available\nHomePage_1.HomePage.validateRecordSaveBtn().should(`not.be.visible`);",
              "err": {},
              "uuid": "772eeac6-7814-4407-bfaf-0fffda927a29",
              "parentUUID": "7d5172ec-9485-40b3-8048-1799c288c52d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Display alert on saving data without mandatory fields",
              "fullTitle": "Application records Display alert on saving data without mandatory fields",
              "timedOut": null,
              "duration": 16981,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//----Enter first name only and validate data should not be saved----//\n// click on create new record\nHomePage_1.HomePage.createNewRecordBtn().click({ force: true });\n// enter first name\nHomePage_1.HomePage.enterFieldData(`First Name`).type(recordFirstName);\n// save button should be displayed\nHomePage_1.HomePage.validateRecordSaveBtn().should(`be.visible`).click();\n// time spent alert should display and click on save\nHomePage_1.HomePage.readAndAcceptModalContent();\n// error should be thrown\nHelperMethod_1.HelperMethod.validateToastMsg(`The record has validation error`).should(`be.visible`);\n//----Enter first name last name and validate data should not be saved----//\n// enter first name\nHomePage_1.HomePage.enterFieldData(`First Name`).type(recordFirstName);\n// enter last name\nHomePage_1.HomePage.enterFieldData(`Last Name`).type(recordLastName);\n// click on save button\nHomePage_1.HomePage.validateRecordSaveBtn().should(`be.visible`).click();\n// read and accept time spent modal\nHomePage_1.HomePage.readAndAcceptModalContent();\n// error msg should be displayed\nHelperMethod_1.HelperMethod.validateToastMsg(`The record has validation error`).should(`be.visible`);\n//----Enter last name, city and validate data should not be saved----//\n// clear first name\nHomePage_1.HomePage.enterFieldData(`First Name`);\n//enter last name\nHomePage_1.HomePage.enterFieldData(`Last Name`).type(recordLastName);\n// enter city name\nHomePage_1.HomePage.enterFieldData(`City`).type(recordCity);\n// click on save button\nHomePage_1.HomePage.validateRecordSaveBtn().should(`be.visible`).click();\n// accept time spent\nHomePage_1.HomePage.readAndAcceptModalContent();\n//error should be displayed\nHelperMethod_1.HelperMethod.validateToastMsg(`The record has validation error`).should(`be.visible`);",
              "err": {},
              "uuid": "0dcf23aa-a4a8-4f34-8975-0927f03aa004",
              "parentUUID": "7d5172ec-9485-40b3-8048-1799c288c52d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create a record and validate alert message",
              "fullTitle": "Application records Create a record and validate alert message",
              "timedOut": null,
              "duration": 12986,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// intercept create record req for fetching application ID\ncy.intercept('POST', '/api/app/**/record').as('appID');\n//----------Enter the mandatory fields and save the record--------------//\n// click on new record\nHomePage_1.HomePage.createNewRecordBtn().click({ force: true });\n// enter first name\nHomePage_1.HomePage.enterFieldData(`First Name`).type(recordFirstName);\n;\n// enter last name\nHomePage_1.HomePage.enterFieldData(`Last Name`).type(recordLastName);\n// enter city\nHomePage_1.HomePage.enterFieldData(`City`).type(recordCity);\n// click on save button\nHomePage_1.HomePage.validateRecordSaveBtn().should(`be.visible`).click();\n//accept time spent\nHomePage_1.HomePage.readAndAcceptModalContent();\ncy.wait('@appID', { timeout: 20000 }).its('response.body.applicationId').then((req) => {\n    applicationID = JSON.stringify(req);\n    cy.log(`applicationID is >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> ${applicationID}`);\n}).then(() => {\n    // record saved message should display\n    HelperMethod_1.HelperMethod.validateToastMsg(`Record Saved`).should(`be.visible`);\n});",
              "err": {},
              "uuid": "aa562570-b86d-4590-b8d4-1d25e6fed937",
              "parentUUID": "7d5172ec-9485-40b3-8048-1799c288c52d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "772eeac6-7814-4407-bfaf-0fffda927a29",
            "0dcf23aa-a4a8-4f34-8975-0927f03aa004",
            "aa562570-b86d-4590-b8d4-1d25e6fed937"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 44398,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "35a40294-900a-49fa-ad95-9fd6e88360e4",
      "title": "",
      "fullFile": "cypress\\e2e\\3-api-test\\api-spec.cy.ts",
      "file": "cypress\\e2e\\3-api-test\\api-spec.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c0965d56-e5b1-4fd7-b66f-13ea24b1dced",
          "title": "API spec file",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Add a record",
              "fullTitle": "API spec file Add a record",
              "timedOut": null,
              "duration": 11134,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const req = {\n    method: 'POST',\n    url: API_BASE_URL + `/app/${appId}/record`,\n    headers: { Accept: 'application/json, application/hal+json', Authorization: `Bearer ${bearerToken}` },\n    failOnStatusCode: false,\n    body: {} /////////////Some Body Here////////////////////\n};\n// make an api request\ncy.request(req).then(({ body, status, statusText, headers, duration }) => {\n    // validate status should be 200\n    expect(200).to.eq(200);\n    id = body.recordID; // assuming the record id\n});",
              "err": {},
              "uuid": "d3d52fe8-3e92-4d8a-b9f4-367146cb94f7",
              "parentUUID": "c0965d56-e5b1-4fd7-b66f-13ea24b1dced",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Fetch a record",
              "fullTitle": "API spec file Fetch a record",
              "timedOut": null,
              "duration": 321,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const req = {\n    method: 'GET',\n    url: API_BASE_URL + `/app/${appId}/record/${id}`,\n    headers: { Accept: 'application/json, application/hal+json', Authorization: `Bearer ${bearerToken}` },\n    failOnStatusCode: false,\n    body: {}\n};\n// make an api request\ncy.request(req).then(({ body, status, statusText, headers, duration }) => {\n    // validate status should be 200\n    expect(200).to.eq(200);\n});",
              "err": {},
              "uuid": "a948d158-25b8-48ee-8f20-ff4fc959af0b",
              "parentUUID": "c0965d56-e5b1-4fd7-b66f-13ea24b1dced",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Delete a record",
              "fullTitle": "API spec file Delete a record",
              "timedOut": null,
              "duration": 284,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const req = {\n    method: 'DELETE',\n    url: API_BASE_URL + `/app/${appId}/record/${id}`,\n    headers: { Accept: 'application/json, application/hal+json', Authorization: `Bearer ${bearerToken}` },\n    failOnStatusCode: false\n};\n// make an api request\ncy.request(req).then(({ body, status, statusText, headers, duration }) => {\n    // validate status should be 200\n    expect(200).to.eq(200);\n});",
              "err": {},
              "uuid": "80197bf2-8c99-4061-9ac4-547d141ece7b",
              "parentUUID": "c0965d56-e5b1-4fd7-b66f-13ea24b1dced",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d3d52fe8-3e92-4d8a-b9f4-367146cb94f7",
            "a948d158-25b8-48ee-8f20-ff4fc959af0b",
            "80197bf2-8c99-4061-9ac4-547d141ece7b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 11739,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "de4f9291-b2d6-4ca1-8654-080de262241a",
      "title": "",
      "fullFile": "cypress\\e2e\\1-login-test\\LoginSpec.cy.ts",
      "file": "cypress\\e2e\\1-login-test\\LoginSpec.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f0765868-9759-4154-8d03-820e5e9c9e3d",
          "title": "Login spec",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Validate login page text",
              "fullTitle": "Login spec Validate login page text",
              "timedOut": null,
              "duration": 14628,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// validate swimlane login page text should be displayed\nLoginPage_1.LoginPage.loginPageTitleCheck();\n;",
              "err": {},
              "uuid": "6364697d-7152-47e0-a79a-14d0f581ea1e",
              "parentUUID": "f0765868-9759-4154-8d03-820e5e9c9e3d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validate submit button should be disabled for empty user name and password",
              "fullTitle": "Login spec Validate submit button should be disabled for empty user name and password",
              "timedOut": null,
              "duration": 23,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// submit button should be disabled for empty user name and password\nLoginPage_1.LoginPage.LoginSubmitBtn().should(`not.be.enabled`);",
              "err": {},
              "uuid": "8eb593ab-9c28-4e7a-90f2-66bf740e292f",
              "parentUUID": "f0765868-9759-4154-8d03-820e5e9c9e3d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validate login should be failed for correct username and incorrect password",
              "fullTitle": "Login spec Validate login should be failed for correct username and incorrect password",
              "timedOut": null,
              "duration": 1158,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// enter valid username\nLoginPage_1.LoginPage.enterUserName(userName);\n// enter invalid password\nLoginPage_1.LoginPage.enterPassword(`dummy password`);\n// submit button should be enabled then click on it\nLoginPage_1.LoginPage.LoginSubmitBtn().should(`be.enabled`).click();\n// validate \"Login failed\" error message\nLoginPage_1.LoginPage.loginErrorCheck(`Login failed`).should(`be.visible`);",
              "err": {},
              "uuid": "08f6e966-9cd0-49d2-94ec-6338cd8f554d",
              "parentUUID": "f0765868-9759-4154-8d03-820e5e9c9e3d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validate login should be failed for correct password and incorrect username",
              "fullTitle": "Login spec Validate login should be failed for correct password and incorrect username",
              "timedOut": null,
              "duration": 1153,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// enter in valid username\nLoginPage_1.LoginPage.enterUserName(`incorrect user name`);\n// enter valid password\nLoginPage_1.LoginPage.enterPassword(password);\n// submit button should be enabled then click on it\nLoginPage_1.LoginPage.LoginSubmitBtn().should(`be.enabled`).click();\n// validate \"Login failed\" error message\nLoginPage_1.LoginPage.loginErrorCheck(`Login failed`).should(`be.visible`);",
              "err": {},
              "uuid": "09b34365-c280-4ee2-8b0b-a03fb550ced4",
              "parentUUID": "f0765868-9759-4154-8d03-820e5e9c9e3d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validate login should be successful for valid username and password",
              "fullTitle": "Login spec Validate login should be successful for valid username and password",
              "timedOut": null,
              "duration": 1218,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// login to the application with valid user name and password\nLoginPage_1.LoginPage.login(userName, password);",
              "err": {},
              "uuid": "95318b57-4e21-4daf-a578-b72d22d2305e",
              "parentUUID": "f0765868-9759-4154-8d03-820e5e9c9e3d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6364697d-7152-47e0-a79a-14d0f581ea1e",
            "8eb593ab-9c28-4e7a-90f2-66bf740e292f",
            "08f6e966-9cd0-49d2-94ec-6338cd8f554d",
            "09b34365-c280-4ee2-8b0b-a03fb550ced4",
            "95318b57-4e21-4daf-a578-b72d22d2305e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 18180,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/results",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}